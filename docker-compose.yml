services:
  postgres:
    image: postgres:latest
    container_name: postgres
    networks:
      - caddy_network
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -d $$POSTGRES_DB -U $$POSTGRES_USER"
        ]
      interval: 10s
      timeout: 5s
      retries: 3

  initdb_py:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - PYTHON_VERSION=3.9
    image: jexxl-python39
    container_name: initdb_py
    networks:
      - caddy_network
    volumes:
      - ./initdb.py:/initdb.py
    depends_on:
      postgres:
        condition: service_healthy

  n8n:
    image: naskio/n8n-python:latest
    container_name: n8n
    networks:
      - caddy_network
    ports:
      - "5678:5678"
    env_file:
      - .env
    volumes:
      - n8n_data:/home/node/.n8n
      - ./pyscripts:/home/node/pyscripts
    command: >
      sh -c "mkdir -p /home/node/pyscripts && n8n"
    depends_on:
      postgres:
        condition: service_healthy

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    networks:
      - caddy_network
    ports:
      - "65162:80"
    env_file:
      - .env
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy

  budibase:
    image: budibase/budibase:latest
    container_name: budibase
    networks:
      - caddy_network
    ports:
      - "65163:80"
    volumes:
      - budibase_data:/data
      - couchdb_data:/opt/couchdb/data
    depends_on:
      postgres:
        condition: service_healthy

  keycloak:
    image: bitnami/keycloak:latest
    container_name: keycloak
    networks:
      - caddy_network
    ports:
      - "65164:8080"
    env_file:
      - .env
    volumes:
      - keycloak_data:/bitnami/keycloak
    depends_on:
      postgres:
        condition: service_healthy

  caddy:
    image: caddy:latest
    container_name: caddy
    networks:
      - caddy_network
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ${CADDY_VOLUME_LOCATION}:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - postgres
      - n8n
      - pgadmin
      - budibase
      - keycloak

volumes:
  n8n_data:
    external: true
  postgres_data:
    external: true
  pgadmin_data:
    external: true
  budibase_data:
    external: true
  couchdb_data:
    external: true
  keycloak_data:
    external: true
  caddy_data:
    external: true
  caddy_config:
    external: true

networks:
  caddy_network:
    external: true
